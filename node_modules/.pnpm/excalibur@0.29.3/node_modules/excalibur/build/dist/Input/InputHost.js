import { Gamepads } from './Gamepad';
import { InputMapper } from './InputMapper';
import { Keyboard } from './Keyboard';
import { PointerEventReceiver } from './PointerEventReceiver';
export class InputHost {
    constructor(options) {
        this._enabled = true;
        const { pointerTarget, grabWindowFocus, engine } = options;
        this.keyboard = new Keyboard();
        this.pointers = new PointerEventReceiver(pointerTarget, engine);
        this.gamepads = new Gamepads();
        this.keyboard.init({ grabWindowFocus });
        this.pointers.init({ grabWindowFocus });
        this.gamepads.init();
        this.inputMapper = new InputMapper({
            keyboard: this.keyboard,
            pointers: this.pointers,
            gamepads: this.gamepads
        });
    }
    get enabled() {
        return this._enabled;
    }
    toggleEnabled(enabled) {
        this._enabled = enabled;
        this.keyboard.toggleEnabled(this._enabled);
        this.pointers.toggleEnabled(this._enabled);
        this.gamepads.toggleEnabled(this._enabled);
    }
    update() {
        if (this._enabled) {
            this.inputMapper.execute();
            this.keyboard.update();
            this.gamepads.update();
        }
    }
}
//# sourceMappingURL=InputHost.js.map