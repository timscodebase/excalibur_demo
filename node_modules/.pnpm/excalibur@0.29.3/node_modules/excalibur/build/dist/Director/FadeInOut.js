import { Color } from '../Color';
import { Rectangle } from '../Graphics';
import { Transition } from './Transition';
export class FadeInOut extends Transition {
    constructor(options) {
        var _a, _b;
        super({
            ...options,
            duration: (_a = options.duration) !== null && _a !== void 0 ? _a : 2000
        });
        this.name = `FadeInOut#${this.id}`;
        this.color = (_b = options.color) !== null && _b !== void 0 ? _b : Color.Black;
    }
    onInitialize(engine) {
        this.transform.pos = engine.screen.unsafeArea.topLeft;
        this.screenCover = new Rectangle({
            width: engine.screen.resolution.width,
            height: engine.screen.resolution.height,
            color: this.color
        });
        this.graphics.add(this.screenCover);
        this.graphics.opacity = this.progress;
    }
    onReset() {
        this.graphics.opacity = this.progress;
    }
    onStart(progress) {
        this.graphics.opacity = progress;
    }
    onEnd(progress) {
        this.graphics.opacity = progress;
    }
    onUpdate(progress) {
        this.graphics.opacity = progress;
    }
}
//# sourceMappingURL=FadeInOut.js.map