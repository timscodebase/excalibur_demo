import * as puppeteer from 'puppeteer';
export interface ExTestContext {
    tests: [string, ((page: puppeteer.Page) => Promise<any>)][];
    page: puppeteer.Page | null;
    interactive: boolean;
    passed: number;
    failed: number;
}
export declare const ExTestContext: ExTestContext;
export interface RunnerOptions {
    url?: string;
    dir?: string;
    port?: number;
    interactive?: boolean;
    showLogs?: boolean;
}
export declare const expectPage: (name: string, path: string) => {
    toBe: (expectedFilePath: string) => Promise<void>;
};
export declare const expectLoaded: () => Promise<false | undefined>;
export declare const test: (name: string, testContext: (page: puppeteer.Page) => Promise<any>) => void;
export declare class Runner {
    private _url;
    private _dir;
    private _port;
    private _interactive;
    private _showLogs;
    constructor(options: RunnerOptions);
    start(): Promise<void>;
}
